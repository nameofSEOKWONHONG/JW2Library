@using TodoBlazor.TodoList

<div class="TodoListItem-virtualized">
    <div class="TodoListItem">
        <div class="checkbox">
            <input class="checkbox" type="checkbox" @onclick="OnToggle"/>
            @if (@Item.IsDone) {
                <div class="text" style="text-decoration:line-through;">@Item.Text</div>    
            }
            else {
                <div class="text">@Item.Text</div>
            }
            
        </div>
        @* {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />} *@
    
        <div class="remove">
            <input class="remove" type="button" value="remove" @onclick="OnRemove"/>
            @* <MdRemoveCircleOutline /> *@
        </div>
    </div>
</div>

@code {
    [Parameter]
    public TodoItem Item { get; set; }

    [Parameter]
    public EventCallback<int> OnRemoveCallback { get; set; }
    [Parameter]
    public EventCallback<int> OnToggleCallback { get; set; }
    
    public async Task OnToggle() {
        await OnToggleCallback.InvokeAsync(Item.Id);
    }

    public async Task OnRemove() {
        await OnRemoveCallback.InvokeAsync(Item.Id);
    }
}